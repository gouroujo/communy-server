extend type Query {

  organisations (
    joined: Boolean
    limit: Int
    offset: Int
    role: OrganisationRole
  ): [Organisation!]

  organisation (
    id: ID
  ): Organisation!

  createOrganisation: Organisation!
}

extend type Mutation {

  createOrganisation (
    input: OrganisationInput!
  ): Organisation!

  editOrganisation (
    id: ID!
    input: OrganisationInput!
  ): Organisation!

  deleteOrganisation (
    id: ID!,
  ): Organisation

  addUserToOrganisation(
    id: ID!
    input: AddUserToOrganisationInput!
  ): Organisation

  setRoleInOrganisation(
    id: ID!
    input: SetRoleInOrganisationInput!
  ): Organisation
}

type Organisation {
  id: ID!
  title: String
  description: String
  logo: String
  cover: String
  coverUploadOpts: String

  role: OrganisationRole
  waiting_ack: Boolean!
  waiting_confirm: Boolean!
  joined: Boolean!
  joinedAt: DateTime

  events (
    before: Date
    after: Date
    limit: Int
    answer: EventAnswer
  ): [Event!]

  nevents (
    before: Date
    after: Date
  ): Int!

  users (
    limit: Int
    role: OrganisationRole
  ): [OrganisationUser!]

  nusers(
    role: OrganisationRole
  ): Int!
}
type OrganisationUser {
  id: ID!
  fullname: String
  avatarUrl: String
  email: String
  role: OrganisationRole
}

input OrganisationInput {
  title: String!
  description: String
  logoUrl: String
  coverUrl: String
}

input AddUserToOrganisationInput {
  email: String
  userId: ID
}

input SetRoleInOrganisationInput {
  userId: ID!
  role: OrganisationRole!
}
