extend type Query {

  # get a list of all events you have access to
  events (
    # filter to a specific organisation
    organisationId: ID
    # limit the number of events
    limit: Int
    # filter events by your answer
    answer: String
    offset: Int
    after: DateTime
    before: DateTime
  ): [Event!]

  event (
    id: ID!
  ): Event!
}

extend type Mutation {
  createEvent (
    input: EventInput!
    organisationId: ID!
  ): Event!

  deleteEvent (
    id: ID!
  ): Event

  editEvent (
    id: ID!
    input: EventInput!
  ): Event!

  addUserToEvent (
    id: ID!
    input: addUserToEventInput!
  ): Event

}

type EventUser {
  fullname: String
  avatar: String
  answer: EventAnswer
}

type Event {
  id: ID!
  title: String!
  description: String
  startTime: DateTime!
  endTime: DateTime!
  allDay: Boolean
  organisation: Organisation!
  nusers: Int!
  users: [EventUser!]
  address: Address
  answer: EventAnswer
}

input EventInput {
  title: String!
  description: String
  startTime: DateTime!
  endTime: DateTime!
  allDay: Boolean
}

input addUserToEventInput {
  userId: ID!
  answer: EventAnswer!
}
